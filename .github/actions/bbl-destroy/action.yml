name: 'Destroy Test Environment'
description: 'Runs bbl destroy to tear down the entire test environment'

inputs:
  env_name:
    description: 'BBL environment name (state dir under the bbl-state repo)'
    required: true
  bbl_state_repo:
    description: 'Repo holding bbl state (owner/repo)'
    required: true
  bbl_state_branch:
    description: 'Branch of the bbl state repo'
    required: false
    default: 'main'
  bbl_state_deploy_key:
    description: 'SSH deploy key for BBL state repo'
    required: true
  gcp_project_id:
    description: 'GCP project ID'
    required: true
  gcp_zone:
    description: 'GCP Zone'
    required: true
  gcp_region:
    description: 'GCP Region'
    required: true

outputs:
  success:
    description: 'Whether destroy succeeded (true if no-op or completed)'
    value: ${{ steps.destroy.outputs.success }}

runs:
  using: 'composite'
  steps:
    - name: Checkout bbl state repo
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.bbl_state_repo }}
        ref: ${{ inputs.bbl_state_branch }}
        ssh-key: ${{ inputs.bbl_state_deploy_key }}
        path: bbl-state

    - name: Setup tools (bbl)
      shell: bash
      run: |
        set -euo pipefail
        wget -O /tmp/bbl https://github.com/cloudfoundry/bosh-bootloader/releases/download/v9.0.36/bbl-v9.0.36_linux_amd64
        chmod +x /tmp/bbl
        sudo mv /tmp/bbl /usr/local/bin/bbl

    - name: Prepare GCP credentials
      id: gcp-creds
      shell: bash
      run: |
        set -euo pipefail
        
        if [[ -n "${GOOGLE_APPLICATION_CREDENTIALS:-}" ]] && [[ -f "${GOOGLE_APPLICATION_CREDENTIALS}" ]]; then
          echo "Using GCP credentials from google-github-actions/auth"
          echo "GCP_KEY_FILE=${GOOGLE_APPLICATION_CREDENTIALS}" >> "$GITHUB_OUTPUT"
        else
          echo "ERROR: No GCP credentials found"
          exit 1
        fi

    - name: Destroy environment
      id: destroy
      shell: bash
      run: |
        set -euo pipefail
        BBL_STATE_DIR="bbl-state/${{ inputs.env_name }}"
        
        echo "Checking for BBL state dir: $BBL_STATE_DIR"
        
        if [[ ! -d "$BBL_STATE_DIR" ]]; then
          echo "BBL state directory not found: $BBL_STATE_DIR"
          echo "Nothing to destroy"
          echo "success=true" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        echo "State dir found. Proceeding with destroy..."
        
        GCP_KEY_FILE="${{ steps.gcp-creds.outputs.GCP_KEY_FILE }}"
        
        if [[ ! -f "$GCP_KEY_FILE" ]]; then
          echo "ERROR: GCP key file not found: $GCP_KEY_FILE"
          exit 1
        fi
        
        export BBL_GCP_PROJECT_ID="${{ inputs.gcp_project_id }}"
        export BBL_GCP_ZONE="${{ inputs.gcp_zone }}"
        export BBL_GCP_REGION="${{ inputs.gcp_region }}"
        export BBL_IAAS=gcp
        
        pushd "$BBL_STATE_DIR"
        echo "Running bbl destroy in $(pwd)"
        
        bbl destroy \
          --no-confirm \
          --state-dir . \
          --iaas gcp \
          --gcp-service-account-key "$GCP_KEY_FILE" \
          --gcp-project-id "$BBL_GCP_PROJECT_ID" \
          --gcp-zone "$BBL_GCP_ZONE" \
          --gcp-region "$BBL_GCP_REGION"
        
        popd
        
        echo "Environment destroyed successfully"
        echo "success=true" >> $GITHUB_OUTPUT

    - name: Cleanup sensitive files
      if: always()
      shell: bash
      run: |
        set -euo pipefail
        ENV_DIR="bbl-state/${{ inputs.env_name }}"
        
        find "$ENV_DIR" -type f \( \
          -name "*.pem" -o \
          -name "*.key" -o \
          -name "private_key" -o \
          -name "id_rsa*" \
        \) -delete 2>/dev/null || true
        
        echo "Cleaned up sensitive files in $ENV_DIR"

    - name: Commit and push BBL state
      if: always()
      shell: bash
      run: |
        set -euo pipefail
        STATE_REPO_DIR="bbl-state"
        
        pushd "$STATE_REPO_DIR"
        git config user.name "CF Buildpacks Eng Bot"
        git config user.email "test@test.com"
        
        if [[ -n "$(git status --porcelain)" ]]; then
          git add -A
          git commit -m "Clean up bbl state dir for ${{ inputs.env_name }} after destroy"
          git push origin ${{ inputs.bbl_state_branch }}
          echo "BBL state changes committed and pushed"
        else
          echo "No BBL state changes to commit"
        fi
        popd
