name: 'BBL Up'
description: 'Set up test environment using BBL with OIDC authentication'

inputs:
  stack:
    description: 'Stack name'
    required: true
  version:
    description: 'Version number'
    required: true
  env_name:
    description: 'Environment name'
    required: true
  gcp_project_id:
    description: 'GCP Project ID'
    required: true
  gcp_zone:
    description: 'GCP Zone'
    required: true
  gcp_region:
    description: 'GCP Region'
    required: true
  lb_domain:
    description: 'Load balancer domain'
    required: true
  bbl_state_repo:
    description: 'Repo for BBL state (owner/repo)'
    required: true
  bbl_state_branch:
    description: 'Branch for BBL state'
    required: false
    default: 'main'
  lb_cert:
    description: 'Load balancer certificate'
    required: true
  lb_key:
    description: 'Load balancer private key'
    required: true
  bbl_state_deploy_key:
    description: 'SSH deploy key for BBL state repo'
    required: true

outputs:
  success:
    description: 'Whether BBL up succeeded'
    value: ${{ steps.bbl-up.outputs.success }}

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ inputs.bbl_state_repo }}
        ref: ${{ inputs.bbl_state_branch }}
        path: bbl-state
        ssh-key: ${{ inputs.bbl_state_deploy_key }}

    - name: Install tools
      shell: bash
      run: |
        wget -qO /tmp/bbl https://github.com/cloudfoundry/bosh-bootloader/releases/download/v9.0.36/bbl-v9.0.36_linux_amd64
        wget -qO /tmp/terraform.zip https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
        wget -qO /tmp/bosh https://github.com/cloudfoundry/bosh-cli/releases/download/v7.4.0/bosh-cli-7.4.0-linux-amd64
        
        chmod +x /tmp/bbl /tmp/bosh
        unzip -q /tmp/terraform.zip -d /tmp/
        sudo mv /tmp/{bbl,terraform,bosh} /usr/local/bin/

    - name: Run BBL Up
      id: bbl-up
      shell: bash
      run: |
        set -euo pipefail
        
        TEMP_DIR=$(mktemp -d)
        trap "rm -rf $TEMP_DIR" EXIT
        
        echo "${{ inputs.lb_cert }}" > "$TEMP_DIR/lb-cert.pem"
        echo "${{ inputs.lb_key }}" > "$TEMP_DIR/lb-key.pem"
        
        mkdir -p bbl-state/${{ inputs.env_name }}
        cd bbl-state/${{ inputs.env_name }}
        
        export BBL_GCP_SERVICE_ACCOUNT_KEY="${GOOGLE_APPLICATION_CREDENTIALS}"
        export BBL_GCP_PROJECT_ID="${{ inputs.gcp_project_id }}"
        export BBL_GCP_ZONE="${{ inputs.gcp_zone }}"
        export BBL_GCP_REGION="${{ inputs.gcp_region }}"
        export BBL_IAAS=gcp
        export BBL_LB_CERT="$TEMP_DIR/lb-cert.pem"
        export BBL_LB_KEY="$TEMP_DIR/lb-key.pem"
        export LB_DOMAIN="${{ inputs.lb_domain }}"
        
        bbl up \
          --terraform-binary /usr/local/bin/terraform \
          --lb-type cf \
          --lb-cert "$BBL_LB_CERT" \
          --lb-key "$BBL_LB_KEY" \
          --lb-domain "$LB_DOMAIN"
        
        echo "success=true" >> "$GITHUB_OUTPUT"

    - name: Save state
      shell: bash
      run: |
        cd bbl-state
        git config user.name "github-actions"
        git config user.email "actions@github.com"
        
        cat >> .gitignore <<EOF
        **/*.pem
        **/*.key
        **/gcp-key.json
        **/*-key.json
        EOF
        
        git add -A
        git diff --staged --quiet || {
          git commit -m "Update BBL state: ${{ inputs.env_name }}"
          git push origin ${{ inputs.bbl_state_branch }}
        }
