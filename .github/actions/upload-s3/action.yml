name: 'Upload to S3'
description: 'Upload artifacts to S3 - equivalent to Concourse upload-s3 task'

inputs:
  upload_type:
    description: 'Type of upload (stack-s3, receipt-s3, or release-s3)'
    required: true
  version:
    description: 'Version number'
    required: true
  bucket_name:
    description: 'S3 bucket name'
    required: true
  file:
    description: 'Optional: explicit file path to upload (used for release-s3)'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Upload to S3
      shell: bash
      run: |
        set -euo pipefail

        STACK="${{ env.STACK }}"
        VERSION="${{ inputs.version }}"
        UPLOAD_TYPE="${{ inputs.upload_type }}"
        BUCKET="${{ inputs.bucket_name }}"
        FILE_INPUT="${{ inputs.file }}"

        case "$UPLOAD_TYPE" in
          "stack")
            STACK_FILE="rootfs-artifacts/${STACK}-${VERSION}.tar.gz"
            if [[ ! -f "$STACK_FILE" ]]; then
              echo "ERROR: Stack file not found: $STACK_FILE"
              ls -la rootfs-artifacts/ || echo "No rootfs-artifacts directory"
              exit 1
            fi

            echo "Uploading stack tarball to S3..."
            aws s3 cp "$STACK_FILE" \
              "s3://${BUCKET}/rootfs/" \
              --content-type application/gzip \
              --metadata version="${VERSION}"
            ;;

          "receipt")
            RECEIPT_FILE="receipt-artifacts/receipt.${STACK}.x86_64-${VERSION}"
            if [[ ! -f "$RECEIPT_FILE" ]]; then
              echo "ERROR: Receipt file not found: $RECEIPT_FILE"
              ls -la receipt-artifacts/ || echo "No receipt-artifacts directory"
              exit 1
            fi

            echo "Uploading receipt to S3..."
            aws s3 cp "$RECEIPT_FILE" \
              "s3://${BUCKET}/rootfs/" \
              --content-type text/plain \
              --metadata version="${VERSION}"
            ;;

          "release")
            RELEASE_FILE="${FILE_INPUT:-rootfs-artifacts/${STACK}-release-${VERSION}.tgz}"
            if [[ ! -f "$RELEASE_FILE" ]]; then
              echo "ERROR: Release file not found: $RELEASE_FILE"
              ls -la rootfs-artifacts/ || echo "No rootfs-artifacts directory"
              exit 1
            fi

            echo "Uploading BOSH release tarball to S3..."
            aws s3 cp "$RELEASE_FILE" \
              "s3://${BUCKET}/rootfs/" \
              --content-type application/gzip \
              --metadata version="${VERSION}"
            ;;

          *)
            echo "ERROR: Unknown upload type: $UPLOAD_TYPE"
            exit 1
            ;;
        esac

    - name: Verify upload
      shell: bash
      run: |
        set -euo pipefail
        
        STACK="${{ env.STACK }}"
        VERSION="${{ inputs.version }}"
        UPLOAD_TYPE="${{ inputs.upload_type }}"
        BUCKET="${{ inputs.bucket_name }}"
        FILE_INPUT="${{ inputs.file }}"

        case "$UPLOAD_TYPE" in
          "stack")
            echo "Verifying stack upload..."
            aws s3 ls "s3://${BUCKET}/rootfs/${STACK}-${VERSION}.tar.gz" || \
              (echo "ERROR: Stack file not found in S3" && exit 1)
            ;;
          "receipt")
            echo "Verifying receipt upload..."
            aws s3 ls "s3://${BUCKET}/rootfs/receipt.${STACK}.x86_64-${VERSION}" || \
              (echo "ERROR: Receipt file not found in S3" && exit 1)
            ;;
          "release")
            RELEASE_FILE_NAME="$(basename ${FILE_INPUT:-${STACK}-release-${VERSION}.tgz})"
            echo "Verifying release upload..."
            aws s3 ls "s3://${BUCKET}/rootfs/${RELEASE_FILE_NAME}" || \
              (echo "ERROR: Release file not found in S3" && exit 1)
            ;;
        esac

        echo "Upload verified successfully"
