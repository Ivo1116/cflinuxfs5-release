name: 'Cleanup CF Deployments'
description: 'Deletes CF and rootfs smoke test deployments from a BBL environment'

inputs:
  stack:
    description: 'Stack name (e.g. {your-cflinuxfs-version})'
    required: true
  bbl_state_repo:
    description: 'Repo holding bbl state (owner/repo)'
    required: true
  bbl_state_branch:
    description: 'Branch of the bbl state repo'
    required: true
    default: main

runs:
  using: 'composite'
  steps:
    - name: Checkout bbl state repo
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.bbl_state_repo }}
        ref: ${{ inputs.bbl_state_branch }}
        ssh-key: ${{ env.BBL_STATE_DEPLOY_KEY }}
        path: bbl-state

    - name: Cache BOSH/BBL tools
      id: cache-tools
      uses: actions/cache@v4
      with:
        path: |
          /usr/local/bin/bbl
          /usr/local/bin/bosh
          /usr/local/bin/terraform
        key: ${{ runner.os }}-bbl-tools-v1  
        restore-keys: ${{ runner.os }}-bbl-tools-

    - name: Setup tools (bosh, bbl)
      if: steps.cache-tools.outputs.cache-hit != 'true'
      shell: bash
      run: |
        set -euo pipefail
        
        wget -O /tmp/bbl https://github.com/cloudfoundry/bosh-bootloader/releases/download/v9.0.36/bbl-v9.0.36_linux_amd64
        chmod +x /tmp/bbl
        sudo mv /tmp/bbl /usr/local/bin/bbl

        wget -O /tmp/bosh https://github.com/cloudfoundry/bosh-cli/releases/download/v7.4.0/bosh-cli-7.4.0-linux-amd64
        chmod +x /tmp/bosh
        sudo mv /tmp/bosh /usr/local/bin/bosh

    - name: Delete CF deployments
      shell: bash
      run: |
        set -euo pipefail
        BBL_STATE_DIR="bbl-state/${{ inputs.stack }}"

        if [[ ! -d "$BBL_STATE_DIR" ]]; then
          echo "BBL state directory not found: $BBL_STATE_DIR"
          exit 1
        fi

        eval "$(bbl print-env --state-dir "$BBL_STATE_DIR")"
        bosh delete-deployment -d cf --non-interactive || echo "CF deployment deletion completed or not found"
